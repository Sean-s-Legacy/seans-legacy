[debug] [2023-10-03T17:15:22.567Z] ----------------------------------------------------------------------
[debug] [2023-10-03T17:15:22.569Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\node_modules\firebase-tools\lib\bin\firebase.js functions:shell
[debug] [2023-10-03T17:15:22.569Z] CLI Version:   11.24.0
[debug] [2023-10-03T17:15:22.569Z] Platform:      win32
[debug] [2023-10-03T17:15:22.569Z] Node Version:  v18.17.1
[debug] [2023-10-03T17:15:22.570Z] Time:          Tue Oct 03 2023 13:15:22 GMT-0400 (Eastern Daylight Time)
[debug] [2023-10-03T17:15:22.570Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-10-03T17:15:22.630Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-10-03T17:15:22.630Z] > authorizing via signed-in user (sunnylee9516@gmail.com)
[debug] [2023-10-03T17:15:22.630Z] [iam] checking project seans-legacy for permissions ["firebase.projects.get"]
[debug] [2023-10-03T17:15:22.631Z] > refreshing access token with scopes: []
[debug] [2023-10-03T17:15:22.633Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2023-10-03T17:15:22.633Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2023-10-03T17:15:22.826Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2023-10-03T17:15:22.826Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2023-10-03T17:15:22.837Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions [none]
[debug] [2023-10-03T17:15:22.837Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions x-goog-quota-user=projects/seans-legacy
[debug] [2023-10-03T17:15:22.837Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2023-10-03T17:15:23.065Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions 200
[debug] [2023-10-03T17:15:23.065Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2023-10-03T17:15:23.080Z] [functions] Functions Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-10-03T17:15:23.087Z] defaultcredentials: writing to file C:\Users\Sunny\AppData\Roaming\firebase\sunnylee9516_gmail_com_application_default_credentials.json
[debug] [2023-10-03T17:15:23.093Z] DEBUG: Setting GAC to C:\Users\Sunny\AppData\Roaming\firebase\sunnylee9516_gmail_com_application_default_credentials.json
[debug] [2023-10-03T17:15:23.094Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/seans-legacy/adminSdkConfig [none]
[debug] [2023-10-03T17:15:23.554Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/seans-legacy/adminSdkConfig 200
[debug] [2023-10-03T17:15:23.554Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/seans-legacy/adminSdkConfig {"projectId":"seans-legacy","databaseURL":"https://seans-legacy-default-rtdb.firebaseio.com","storageBucket":"seans-legacy.appspot.com"}
[debug] [2023-10-03T17:15:23.589Z] [functions] Watching "C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions" for Cloud Functions...
[debug] [2023-10-03T17:15:23.598Z] Validating nodejs source
[debug] [2023-10-03T17:15:24.940Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "dependencies": {
    "body-parser": "^1.20.2",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:15:24.940Z] Building nodejs source
[debug] [2023-10-03T17:15:24.940Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[warn] !  functions: Your requested "node" version "16" doesn't match your global version "18". Using node@18 from host. 
[debug] [2023-10-03T17:15:24.943Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:15:24.950Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:15:25.174Z] Serving at port 8149

[debug] [2023-10-03T17:15:25.569Z] Server started

[debug] [2023-10-03T17:15:25.572Z] Got response from /__/functions.yaml {"endpoints":{"app":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"app"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-10-03T17:15:25.577Z] shutdown requested via /__/quitquitquit

[debug] [2023-10-03T17:15:25.797Z] <ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    constructed: true,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: true,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    dataEmitted: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  _events: [Object: null prototype] { end: [Function: responseOnEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> TLSSocket {
    _tlsOptions: {
      allowHalfOpen: undefined,
      pipe: false,
      secureContext: [SecureContext],
      isServer: false,
      requestCert: true,
      rejectUnauthorized: true,
      session: undefined,
      ALPNProtocols: undefined,
      requestOCSP: undefined,
      enableTrace: undefined,
      pskCallback: undefined,
      highWaterMark: undefined,
      onread: undefined,
      signal: undefined
    },
    _secureEstablished: true,
    _securePending: false,
    _newSessionPending: false,
    _controlReleased: true,
    secureConnecting: false,
    _SNICallback: null,
    servername: 'seans-legacy.firebaseio.com',
    alpnProtocol: false,
    authorized: true,
    authorizationError: null,
    encrypted: true,
    _events: [Object: null prototype] {
      close: [Array],
      end: [Array],
      newListener: [Function: keylogNewListener],
      secure: [Function: onConnectSecure],
      session: [Function (anonymous)],
      free: [Function: onFree],
      timeout: [Array],
      agentRemove: [Function: onRemove],
      error: [Function: socketErrorListener],
      data: [Function: socketOnData],
      drain: [Function: ondrain]
    },
    _eventsCount: 11,
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: 'seans-legacy.firebaseio.com',
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: true,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: undefined,
    _server: null,
    ssl: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    _requestCert: true,
    _rejectUnauthorized: true,
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': null,
      '6': null,
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: [ClientRequest],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient],
      joinDuplicateHeaders: undefined,
      [Symbol(resource_symbol)]: [HTTPClientAsyncResource]
    },
    _httpMessage: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [Circular *1],
      _header: 'GET / HTTP/1.1\r\n' +
        'Host: seans-legacy.firebaseio.com\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/',
      _ended: false,
      res: [Circular *2],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: [HTTPParser],
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'seans-legacy.firebaseio.com',
      protocol: 'https:',
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(res)]: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(verified)]: true,
    [Symbol(pendingSession)]: null,
    [Symbol(async_id_symbol)]: 13,
    [Symbol(kHandle)]: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: false,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(connect-options)]: {
      rejectUnauthorized: true,
      ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
      checkServerIdentity: [Function: checkServerIdentity],
      minDHSize: 1024,
      protocol: 'https:',
      hostname: 'seans-legacy.firebaseio.com',
      hash: '',
      search: '',
      pathname: '/',
      path: null,
      href: 'https://seans-legacy.firebaseio.com/',
      _defaultAgent: [Agent],
      port: 443,
      host: 'seans-legacy.firebaseio.com',
      noDelay: true,
      servername: 'seans-legacy.firebaseio.com',
      _agentKey: 'seans-legacy.firebaseio.com:443:::::::::::::::::::::',
      encoding: null,
      singleUse: true,
      [Symbol(context)]: [URLContext]
    }
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  rawHeaders: [
    'Server',
    'nginx',
    'Date',
    'Tue, 03 Oct 2023 17:15:25 GMT',
    'Content-Type',
    'text/plain',
    'Content-Length',
    '117',
    'Connection',
    'close',
    'Access-Control-Allow-Origin',
    '*',
    'Strict-Transport-Security',
    'max-age=31556926; includeSubDomains; preload'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: undefined,
  aborted: false,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 404,
  statusMessage: 'Not Found',
  client: <ref *1> TLSSocket {
    _tlsOptions: {
      allowHalfOpen: undefined,
      pipe: false,
      secureContext: [SecureContext],
      isServer: false,
      requestCert: true,
      rejectUnauthorized: true,
      session: undefined,
      ALPNProtocols: undefined,
      requestOCSP: undefined,
      enableTrace: undefined,
      pskCallback: undefined,
      highWaterMark: undefined,
      onread: undefined,
      signal: undefined
    },
    _secureEstablished: true,
    _securePending: false,
    _newSessionPending: false,
    _controlReleased: true,
    secureConnecting: false,
    _SNICallback: null,
    servername: 'seans-legacy.firebaseio.com',
    alpnProtocol: false,
    authorized: true,
    authorizationError: null,
    encrypted: true,
    _events: [Object: null prototype] {
      close: [Array],
      end: [Array],
      newListener: [Function: keylogNewListener],
      secure: [Function: onConnectSecure],
      session: [Function (anonymous)],
      free: [Function: onFree],
      timeout: [Array],
      agentRemove: [Function: onRemove],
      error: [Function: socketErrorListener],
      data: [Function: socketOnData],
      drain: [Function: ondrain]
    },
    _eventsCount: 11,
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: 'seans-legacy.firebaseio.com',
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: true,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: undefined,
    _server: null,
    ssl: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    _requestCert: true,
    _rejectUnauthorized: true,
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': null,
      '6': null,
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: [ClientRequest],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient],
      joinDuplicateHeaders: undefined,
      [Symbol(resource_symbol)]: [HTTPClientAsyncResource]
    },
    _httpMessage: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [Circular *1],
      _header: 'GET / HTTP/1.1\r\n' +
        'Host: seans-legacy.firebaseio.com\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/',
      _ended: false,
      res: [Circular *2],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: [HTTPParser],
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'seans-legacy.firebaseio.com',
      protocol: 'https:',
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(res)]: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(verified)]: true,
    [Symbol(pendingSession)]: null,
    [Symbol(async_id_symbol)]: 13,
    [Symbol(kHandle)]: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: false,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(connect-options)]: {
      rejectUnauthorized: true,
      ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
      checkServerIdentity: [Function: checkServerIdentity],
      minDHSize: 1024,
      protocol: 'https:',
      hostname: 'seans-legacy.firebaseio.com',
      hash: '',
      search: '',
      pathname: '/',
      path: null,
      href: 'https://seans-legacy.firebaseio.com/',
      _defaultAgent: [Agent],
      port: 443,
      host: 'seans-legacy.firebaseio.com',
      noDelay: true,
      servername: 'seans-legacy.firebaseio.com',
      _agentKey: 'seans-legacy.firebaseio.com:443:::::::::::::::::::::',
      encoding: null,
      singleUse: true,
      [Symbol(context)]: [URLContext]
    }
  },
  _consuming: false,
  _dumped: false,
  req: <ref *3> ClientRequest {
    _events: [Object: null prototype] { finish: [Function: requestOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: <ref *1> TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'seans-legacy.firebaseio.com',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 11,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'seans-legacy.firebaseio.com',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      parser: [HTTPParser],
      _httpMessage: [Circular *3],
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 13,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    _header: 'GET / HTTP/1.1\r\nHost: seans-legacy.firebaseio.com\r\nConnection: close\r\n\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/',
    _ended: false,
    res: [Circular *2],
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': null,
      '6': null,
      _headers: [],
      _url: '',
      socket: [TLSSocket],
      incoming: [Circular *2],
      outgoing: [Circular *3],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient],
      joinDuplicateHeaders: undefined,
      [Symbol(resource_symbol)]: [HTTPClientAsyncResource]
    },
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'seans-legacy.firebaseio.com',
    protocol: 'https:',
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { host: [Array] },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: null,
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}

[debug] [2023-10-03T17:15:35.584Z] [functions] Loaded functions definitions from source: app.
[debug] [2023-10-03T17:15:35.585Z] [functions[us-central1-app]] http function initialized (http://127.0.0.1:5000/seans-legacy/us-central1/app).
[info] i  functions: Loaded functions: app 
[warn] !  functions: The following emulators are not running, calls to these services will affect production: firestore, database, pubsub, storage, eventarc 
[debug] [2023-10-03T17:16:22.377Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\src\app.ts changed, reloading triggers
[debug] [2023-10-03T17:16:23.381Z] Validating nodejs source
[debug] [2023-10-03T17:16:24.677Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "dependencies": {
    "body-parser": "^1.20.2",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:16:24.677Z] Building nodejs source
[debug] [2023-10-03T17:16:24.677Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[warn] !  functions: Your requested "node" version "16" doesn't match your global version "18". Using node@18 from host. 
[debug] [2023-10-03T17:16:24.678Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:16:24.684Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:16:24.868Z] Serving at port 8341

[error] !!  functions: Failed to load function definition from source: FetchError: request to http://localhost:8341/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8341 {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FetchError: request to http://localhost:8341/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8341"}}
[debug] [2023-10-03T17:26:16.089Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\src\user\controller.ts changed, reloading triggers
[debug] [2023-10-03T17:26:16.149Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\src\user\controller.ts changed, reloading triggers
[debug] [2023-10-03T17:26:17.155Z] Validating nodejs source
[debug] [2023-10-03T17:26:19.023Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "dependencies": {
    "body-parser": "^1.20.2",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:26:19.023Z] Building nodejs source
[debug] [2023-10-03T17:26:19.023Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[warn] !  functions: Your requested "node" version "16" doesn't match your global version "18". Using node@18 from host. 
[debug] [2023-10-03T17:26:19.029Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:26:19.052Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:26:19.393Z] Serving at port 8796

[error] !!  functions: Failed to load function definition from source: FetchError: request to http://localhost:8796/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8796 {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FetchError: request to http://localhost:8796/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8796"}}
[debug] [2023-10-03T17:26:28.107Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\src\user\routes.ts changed, reloading triggers
[debug] [2023-10-03T17:26:29.122Z] Validating nodejs source
[debug] [2023-10-03T17:26:30.431Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "dependencies": {
    "body-parser": "^1.20.2",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:26:30.431Z] Building nodejs source
[debug] [2023-10-03T17:26:30.431Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[warn] !  functions: Your requested "node" version "16" doesn't match your global version "18". Using node@18 from host. 
[debug] [2023-10-03T17:26:30.432Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:26:30.438Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:26:30.636Z] Serving at port 8412

[error] !!  functions: Failed to load function definition from source: FetchError: request to http://localhost:8412/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8412 {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FetchError: request to http://localhost:8412/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8412"}}
[debug] [2023-10-03T17:26:34.606Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\src\user\service.ts changed, reloading triggers
[debug] [2023-10-03T17:26:35.615Z] Validating nodejs source
[debug] [2023-10-03T17:26:36.785Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "dependencies": {
    "body-parser": "^1.20.2",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:26:36.785Z] Building nodejs source
[debug] [2023-10-03T17:26:36.785Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[warn] !  functions: Your requested "node" version "16" doesn't match your global version "18". Using node@18 from host. 
[debug] [2023-10-03T17:26:36.786Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:26:36.792Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:26:36.968Z] Serving at port 8429

[error] !!  functions: Failed to load function definition from source: FetchError: request to http://localhost:8429/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8429 {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FetchError: request to http://localhost:8429/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8429"}}
[debug] [2023-10-03T17:26:43.493Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\src\user\service.ts changed, reloading triggers
[debug] [2023-10-03T17:26:44.495Z] Validating nodejs source
[debug] [2023-10-03T17:26:45.734Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "dependencies": {
    "body-parser": "^1.20.2",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:26:45.734Z] Building nodejs source
[debug] [2023-10-03T17:26:45.734Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[warn] !  functions: Your requested "node" version "16" doesn't match your global version "18". Using node@18 from host. 
[debug] [2023-10-03T17:26:45.735Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:26:45.742Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:26:46.087Z] Serving at port 8104

[error] !!  functions: Failed to load function definition from source: FetchError: request to http://localhost:8104/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8104 {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FetchError: request to http://localhost:8104/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8104"}}
[debug] [2023-10-03T17:27:16.506Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\package.json changed, reloading triggers
[debug] [2023-10-03T17:27:17.512Z] Validating nodejs source
[debug] [2023-10-03T17:27:18.963Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "18"
  },
  "dependencies": {
    "body-parser": "^1.20.2",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:27:18.964Z] Building nodejs source
[debug] [2023-10-03T17:27:18.964Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[warn] !  functions: Your requested "node" version "16" doesn't match your global version "18". Using node@18 from host. 
[debug] [2023-10-03T17:27:18.965Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:27:18.973Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:27:19.166Z] Serving at port 8925

[error] !!  functions: Failed to load function definition from source: FetchError: request to http://localhost:8925/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8925 {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FetchError: request to http://localhost:8925/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8925"}}
[debug] [2023-10-03T17:28:34.650Z] ----------------------------------------------------------------------
[debug] [2023-10-03T17:28:34.652Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\node_modules\firebase-tools\lib\bin\firebase.js functions:shell
[debug] [2023-10-03T17:28:34.652Z] CLI Version:   11.24.0
[debug] [2023-10-03T17:28:34.652Z] Platform:      win32
[debug] [2023-10-03T17:28:34.652Z] Node Version:  v18.17.1
[debug] [2023-10-03T17:28:34.653Z] Time:          Tue Oct 03 2023 13:28:34 GMT-0400 (Eastern Daylight Time)
[debug] [2023-10-03T17:28:34.654Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-10-03T17:28:34.713Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-10-03T17:28:34.713Z] > authorizing via signed-in user (sunnylee9516@gmail.com)
[debug] [2023-10-03T17:28:34.714Z] [iam] checking project seans-legacy for permissions ["firebase.projects.get"]
[debug] [2023-10-03T17:28:34.715Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions [none]
[debug] [2023-10-03T17:28:34.716Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions x-goog-quota-user=projects/seans-legacy
[debug] [2023-10-03T17:28:34.716Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2023-10-03T17:28:34.908Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions 200
[debug] [2023-10-03T17:28:34.908Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/seans-legacy:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2023-10-03T17:28:34.912Z] [functions] Functions Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-10-03T17:28:34.914Z] defaultcredentials: writing to file C:\Users\Sunny\AppData\Roaming\firebase\sunnylee9516_gmail_com_application_default_credentials.json
[debug] [2023-10-03T17:28:34.915Z] DEBUG: Setting GAC to C:\Users\Sunny\AppData\Roaming\firebase\sunnylee9516_gmail_com_application_default_credentials.json
[debug] [2023-10-03T17:28:34.915Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/seans-legacy/adminSdkConfig [none]
[debug] [2023-10-03T17:28:35.236Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/seans-legacy/adminSdkConfig 200
[debug] [2023-10-03T17:28:35.237Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/seans-legacy/adminSdkConfig {"projectId":"seans-legacy","databaseURL":"https://seans-legacy-default-rtdb.firebaseio.com","storageBucket":"seans-legacy.appspot.com"}
[debug] [2023-10-03T17:28:35.268Z] [functions] Watching "C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions" for Cloud Functions...
[debug] [2023-10-03T17:28:35.280Z] Validating nodejs source
[debug] [2023-10-03T17:28:36.556Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "18"
  },
  "dependencies": {
    "@getbrevo/brevo": "^1.0.1",
    "body-parser": "^1.20.2",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:28:36.556Z] Building nodejs source
[debug] [2023-10-03T17:28:36.557Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[info] +  functions: Using node@18 from host. 
[debug] [2023-10-03T17:28:36.559Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:28:36.574Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:28:36.755Z] Serving at port 8643

[debug] [2023-10-03T17:28:37.974Z] Server started

[debug] [2023-10-03T17:28:37.976Z] Got response from /__/functions.yaml {"endpoints":{"app":{"platform":"gcfv1","availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"serviceAccountEmail":null,"vpc":null,"httpsTrigger":{},"entryPoint":"app"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-10-03T17:28:37.982Z] shutdown requested via /__/quitquitquit

[debug] [2023-10-03T17:28:38.134Z] <ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    constructed: true,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: true,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    dataEmitted: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  _events: [Object: null prototype] { end: [Function: responseOnEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: <ref *1> TLSSocket {
    _tlsOptions: {
      allowHalfOpen: undefined,
      pipe: false,
      secureContext: [SecureContext],
      isServer: false,
      requestCert: true,
      rejectUnauthorized: true,
      session: undefined,
      ALPNProtocols: undefined,
      requestOCSP: undefined,
      enableTrace: undefined,
      pskCallback: undefined,
      highWaterMark: undefined,
      onread: undefined,
      signal: undefined
    },
    _secureEstablished: true,
    _securePending: false,
    _newSessionPending: false,
    _controlReleased: true,
    secureConnecting: false,
    _SNICallback: null,
    servername: 'seans-legacy.firebaseio.com',
    alpnProtocol: false,
    authorized: true,
    authorizationError: null,
    encrypted: true,
    _events: [Object: null prototype] {
      close: [Array],
      end: [Array],
      newListener: [Function: keylogNewListener],
      secure: [Function: onConnectSecure],
      session: [Function (anonymous)],
      free: [Function: onFree],
      timeout: [Array],
      agentRemove: [Function: onRemove],
      error: [Function: socketErrorListener],
      data: [Function: socketOnData],
      drain: [Function: ondrain]
    },
    _eventsCount: 11,
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: 'seans-legacy.firebaseio.com',
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: true,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: undefined,
    _server: null,
    ssl: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    _requestCert: true,
    _rejectUnauthorized: true,
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': null,
      '6': null,
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: [ClientRequest],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient],
      joinDuplicateHeaders: undefined,
      [Symbol(resource_symbol)]: [HTTPClientAsyncResource]
    },
    _httpMessage: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [Circular *1],
      _header: 'GET / HTTP/1.1\r\n' +
        'Host: seans-legacy.firebaseio.com\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/',
      _ended: false,
      res: [Circular *2],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: [HTTPParser],
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'seans-legacy.firebaseio.com',
      protocol: 'https:',
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(res)]: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(verified)]: true,
    [Symbol(pendingSession)]: null,
    [Symbol(async_id_symbol)]: 14,
    [Symbol(kHandle)]: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: false,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(connect-options)]: {
      rejectUnauthorized: true,
      ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
      checkServerIdentity: [Function: checkServerIdentity],
      minDHSize: 1024,
      protocol: 'https:',
      hostname: 'seans-legacy.firebaseio.com',
      hash: '',
      search: '',
      pathname: '/',
      path: null,
      href: 'https://seans-legacy.firebaseio.com/',
      _defaultAgent: [Agent],
      port: 443,
      host: 'seans-legacy.firebaseio.com',
      noDelay: true,
      servername: 'seans-legacy.firebaseio.com',
      _agentKey: 'seans-legacy.firebaseio.com:443:::::::::::::::::::::',
      encoding: null,
      singleUse: true,
      [Symbol(context)]: [URLContext]
    }
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  rawHeaders: [
    'Server',
    'nginx',
    'Date',
    'Tue, 03 Oct 2023 17:28:38 GMT',
    'Content-Type',
    'text/plain',
    'Content-Length',
    '117',
    'Connection',
    'close',
    'Access-Control-Allow-Origin',
    '*',
    'Strict-Transport-Security',
    'max-age=31556926; includeSubDomains; preload'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: undefined,
  aborted: false,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 404,
  statusMessage: 'Not Found',
  client: <ref *1> TLSSocket {
    _tlsOptions: {
      allowHalfOpen: undefined,
      pipe: false,
      secureContext: [SecureContext],
      isServer: false,
      requestCert: true,
      rejectUnauthorized: true,
      session: undefined,
      ALPNProtocols: undefined,
      requestOCSP: undefined,
      enableTrace: undefined,
      pskCallback: undefined,
      highWaterMark: undefined,
      onread: undefined,
      signal: undefined
    },
    _secureEstablished: true,
    _securePending: false,
    _newSessionPending: false,
    _controlReleased: true,
    secureConnecting: false,
    _SNICallback: null,
    servername: 'seans-legacy.firebaseio.com',
    alpnProtocol: false,
    authorized: true,
    authorizationError: null,
    encrypted: true,
    _events: [Object: null prototype] {
      close: [Array],
      end: [Array],
      newListener: [Function: keylogNewListener],
      secure: [Function: onConnectSecure],
      session: [Function (anonymous)],
      free: [Function: onFree],
      timeout: [Array],
      agentRemove: [Function: onRemove],
      error: [Function: socketErrorListener],
      data: [Function: socketOnData],
      drain: [Function: ondrain]
    },
    _eventsCount: 11,
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: 'seans-legacy.firebaseio.com',
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: true,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: undefined,
    _server: null,
    ssl: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    _requestCert: true,
    _rejectUnauthorized: true,
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': null,
      '6': null,
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: [ClientRequest],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient],
      joinDuplicateHeaders: undefined,
      [Symbol(resource_symbol)]: [HTTPClientAsyncResource]
    },
    _httpMessage: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [Circular *1],
      _header: 'GET / HTTP/1.1\r\n' +
        'Host: seans-legacy.firebaseio.com\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/',
      _ended: false,
      res: [Circular *2],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: [HTTPParser],
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'seans-legacy.firebaseio.com',
      protocol: 'https:',
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(res)]: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(verified)]: true,
    [Symbol(pendingSession)]: null,
    [Symbol(async_id_symbol)]: 14,
    [Symbol(kHandle)]: TLSWrap {
      _parent: [TCP],
      _parentWrap: undefined,
      _secureContext: [SecureContext],
      reading: true,
      onkeylog: [Function: onkeylog],
      onhandshakestart: {},
      onhandshakedone: [Function (anonymous)],
      onocspresponse: [Function: onocspresponse],
      onnewsession: [Function: onnewsessionclient],
      onerror: [Function: onerror],
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: false,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(connect-options)]: {
      rejectUnauthorized: true,
      ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
      checkServerIdentity: [Function: checkServerIdentity],
      minDHSize: 1024,
      protocol: 'https:',
      hostname: 'seans-legacy.firebaseio.com',
      hash: '',
      search: '',
      pathname: '/',
      path: null,
      href: 'https://seans-legacy.firebaseio.com/',
      _defaultAgent: [Agent],
      port: 443,
      host: 'seans-legacy.firebaseio.com',
      noDelay: true,
      servername: 'seans-legacy.firebaseio.com',
      _agentKey: 'seans-legacy.firebaseio.com:443:::::::::::::::::::::',
      encoding: null,
      singleUse: true,
      [Symbol(context)]: [URLContext]
    }
  },
  _consuming: false,
  _dumped: false,
  req: <ref *3> ClientRequest {
    _events: [Object: null prototype] { finish: [Function: requestOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: <ref *1> TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'seans-legacy.firebaseio.com',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 11,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'seans-legacy.firebaseio.com',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      parser: [HTTPParser],
      _httpMessage: [Circular *3],
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 14,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    _header: 'GET / HTTP/1.1\r\nHost: seans-legacy.firebaseio.com\r\nConnection: close\r\n\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/',
    _ended: false,
    res: [Circular *2],
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': null,
      '6': null,
      _headers: [],
      _url: '',
      socket: [TLSSocket],
      incoming: [Circular *2],
      outgoing: [Circular *3],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient],
      joinDuplicateHeaders: undefined,
      [Symbol(resource_symbol)]: [HTTPClientAsyncResource]
    },
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'seans-legacy.firebaseio.com',
    protocol: 'https:',
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { host: [Array] },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: null,
  [Symbol(kHeadersCount)]: 14,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}

[debug] [2023-10-03T17:28:47.996Z] [functions] Loaded functions definitions from source: app.
[debug] [2023-10-03T17:28:47.997Z] [functions[us-central1-app]] http function initialized (http://127.0.0.1:5000/seans-legacy/us-central1/app).
[info] i  functions: Loaded functions: app 
[warn] !  functions: The following emulators are not running, calls to these services will affect production: firestore, database, pubsub, storage, eventarc 
[debug] [2023-10-03T17:30:34.852Z] * Route : USERS

[debug] [2023-10-03T17:30:34.853Z] /users/createMentee
+++++++++++++++++++ create Mentee +++++++++++++++++++
+++++++++++++++++++ create Mentee +++++++++++++++++++

[debug] [2023-10-03T17:30:35.414Z] * Route : USERS
/users/emailVerification

[debug] [2023-10-03T17:30:35.414Z] Received request to send verification email to: sunnylee9516@gmail.com

[debug] [2023-10-03T17:30:35.725Z] +++++++++++++++++++ after create +++++++++++++++++++

[debug] [2023-10-03T17:30:35.725Z] undefined

[debug] [2023-10-03T17:30:36.410Z] API called successfully. Email sent. Response: exports {
  messageId: '<202310031730.14543686404@smtp-relay.mailin.fr>'
}

[debug] [2023-10-03T17:32:14.861Z] * Route : USERS
/users/emailVerification

[debug] [2023-10-03T17:32:14.862Z] Received request to send verification email to: sunnylee9516@gmail.com

[debug] [2023-10-03T17:32:14.865Z] * Route : USERS

[debug] [2023-10-03T17:32:14.865Z] /users/emailVerification
Received request to send verification email to: sunnylee9516@gmail.com

[debug] [2023-10-03T17:32:15.991Z] API called successfully. Email sent. Response: exports {
  messageId: '<202310031732.85626113712@smtp-relay.mailin.fr>'
}

[debug] [2023-10-03T17:32:16.149Z] API called successfully. Email sent. Response: exports {
  messageId: '<202310031732.11648012566@smtp-relay.mailin.fr>'
}

[debug] [2023-10-03T17:34:24.066Z] * Route : USERS
/users/createMentee

[debug] [2023-10-03T17:34:24.066Z] +++++++++++++++++++ create Mentee +++++++++++++++++++
+++++++++++++++++++ create Mentee +++++++++++++++++++

[debug] [2023-10-03T17:34:24.184Z] +++++++++++++++++++ after create +++++++++++++++++++

[debug] [2023-10-03T17:34:24.184Z] undefined

[debug] [2023-10-03T17:34:24.283Z] * Route : USERS

[debug] [2023-10-03T17:34:24.283Z] /users/emailVerification
Received request to send verification email to: sunnylee9516@gmail.com

[debug] [2023-10-03T17:34:25.283Z] API called successfully. Email sent. Response: exports {
  messageId: '<202310031734.37097866306@smtp-relay.mailin.fr>'
}

[debug] [2023-10-03T17:37:46.425Z] * Route : USERS

[debug] [2023-10-03T17:37:46.426Z] /users/emailVerification
Received request to send verification email to: sunnylee9516@gmail.com

[debug] [2023-10-03T17:37:46.495Z] * Route : USERS
/users/emailVerification

[debug] [2023-10-03T17:37:46.495Z] Received request to send verification email to: sunnylee9516@gmail.com

[debug] [2023-10-03T17:37:47.473Z] API called successfully. Email sent. Response: exports {
  messageId: '<202310031737.60414472024@smtp-relay.mailin.fr>'
}

[debug] [2023-10-03T17:37:47.521Z] API called successfully. Email sent. Response: exports {
  messageId: '<202310031737.71353349309@smtp-relay.mailin.fr>'
}

[debug] [2023-10-03T17:37:54.476Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\src\user\routes.ts changed, reloading triggers
[debug] [2023-10-03T17:37:54.508Z] DEBUG: File C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\src\user\routes.ts changed, reloading triggers
[debug] [2023-10-03T17:37:55.757Z] Validating nodejs source
[debug] [2023-10-03T17:37:58.994Z] > [functions] package.json contents: {
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "shell": "npm run build && firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "18"
  },
  "dependencies": {
    "@getbrevo/brevo": "^1.0.1",
    "body-parser": "^1.20.2",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "firebase-admin": "^11.5.0",
    "firebase-functions": "^4.4.1",
    "helmet": "^4.6.0",
    "nodemon": "^2.0.20",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.0.0",
    "typescript": "^4.9.0"
  },
  "private": true
}
[debug] [2023-10-03T17:37:58.995Z] Building nodejs source
[debug] [2023-10-03T17:37:58.995Z] Failed to find version of module node: reached end of search path C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules
[info] +  functions: Using node@18 from host. 
[debug] [2023-10-03T17:37:59.039Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-10-03T17:37:59.126Z] Found firebase-functions binary at 'C:\Users\Sunny\Desktop\seans legacy6\seans-legacy\functions\node_modules\.bin\firebase-functions'
[debug] [2023-10-03T17:37:59.840Z] Serving at port 8770

[error] !!  functions: Failed to load function definition from source: FetchError: request to http://localhost:8770/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8770 {"metadata":{"emulator":{"name":"functions"},"message":"Failed to load function definition from source: FetchError: request to http://localhost:8770/__/quitquitquit failed, reason: connect ECONNREFUSED ::1:8770"}}
